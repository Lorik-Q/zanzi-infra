- name: Update all packages to the latest version for EL
  ansible.builtin.dnf:
    name: "*"
    state: latest
    update_only: true

- name: Install epel for EL
  ansible.builtin.dnf:
    name:
      - epel-release
    state: present
    update_cache: true

- name: Install powertools(crb) for epel for EL
  ansible.builtin.command: dnf config-manager --set-enabled crb # If EL8 change crb to powertools
  register: output
  changed_when: output == 0

- name: Install prerequisite packages for CheckMK
  ansible.builtin.dnf:
    name:
      # - xinetd => if EL8 add xinetd
      - graphviz-gd
      - freeradius-utils
      - php-mbstring
    state: present
    update_cache: true

- name: Setup SELinux rule
  ansible.builtin.command: setsebool -P httpd_can_network_connect 1
  register: output
  changed_when: output == 0

- name: Setup firewall rule
  ansible.builtin.command: firewall-cmd --zone=public --add-service=http --permanent
  register: output
  changed_when: output == 0

- name: Activate firewall rule
  ansible.builtin.command: firewall-cmd --reload
  register: output
  changed_when: output == 0

- name: Fetch latest checkmk release URL
  ansible.builtin.uri:
    url: "https://download.checkmk.com/stable_downloads.json"
    return_content: true
  register: json_response

- name: Create directory for latest checkmk release
  ansible.builtin.file:
    path: /root/checkmk/latest_release
    state: directory
    mode: '0755'

- name: Download the latest checkmk distribution
  ansible.builtin.get_url:
    url: 'https://download.checkmk.com/checkmk/{{ latest_version }}/{{ dynamic_file_name }}'
    dest: '/root/checkmk/latest_release/check-mk-raw-latest.x86_64.rpm'
    mode: '0644'
  vars:
    latest_version: "{{ json_response.json.checkmk | dict2items | sort(attribute='key') | last | json_query('value.version') }}"
    # In the line below if EL8 change el9 to el8
    dynamic_file_name: "{{ json_response.json.checkmk | dict2items | sort(attribute='key') | last | json_query('value.editions.cre.el9[0]') }}"

- name: Set fact for checkmk version
  ansible.builtin.set_fact:
    checkmk_version: "{{ json_response.json.checkmk | dict2items | sort(attribute='key') | last | json_query('value.version') }}"

- name: Install CheckMK
  ansible.builtin.command: dnf install --nogpgcheck /root/checkmk/latest_release/check-mk-raw-latest.x86_64.rpm -y
  register: output
  changed_when: output == 0

- name: Remove the downloaded rpm
  ansible.builtin.file:
    path: '/root/checkmk/latest_release/check-mk-raw-latest.x86_64.rpm'
    state: absent

- name: Create a new site - monitoring
  become: true
  ansible.builtin.shell: |
    set -o pipefail
    omd -V {{ checkmk_version }}.cre create {{ server_site_name }}
  args:
    executable: /bin/bash
    creates: "/omd/sites/{{ server_site_name }}"
  register: checkmk_server_sites_created

- name: Update Admin Password
  ansible.builtin.shell: |
    set -o pipefail
    echo '{{ admin_pw }}' | htpasswd -i -B -C 12 /omd/sites/{{ server_site_name }}/etc/htpasswd cmkadmin
  args:
    executable: /bin/bash
  changed_when: false

- name: Start the site - monitoring
  become: true
  ansible.builtin.shell: |
    set -o pipefail
    omd start {{ server_site_name }}
  args:
    executable: /bin/bash
    creates: "/opt/omd/sites/{{ server_site_name }}/temp/run/live"